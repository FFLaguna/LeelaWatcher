/*
    Copyright 2017 Patrick G. Heck

    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
    You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing, software
    distributed under the License is distributed on an "AS IS" BASIS,
    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    See the License for the specific language governing permissions and
    limitations under the License.
 */

package tsb.gui;

import tsb.TsbConstants;
import tsb.goboard.Board;
import tsb.goboard.Move;
import tsb.goboard.PointOfPlay;

import javax.swing.*;
import java.awt.event.InputEvent;
import java.awt.event.WindowEvent;
import java.io.File;
import java.net.URL;

/**
 * Provides the entry point for the program, and the main window with the
 * board and controls.
 *
 * @author Patrick G. Heck
 * @version $Id$
 */
public class MainWindow extends javax.swing.JFrame implements TsbConstants {

  private static final byte GAME_NAME = 0;
  private static final byte PLYR_INFO = 1;
  private static final byte KBTZ_PANL = 2;
  private static final byte VCR__BTNS = 3;
  private static final byte CTRL_BTNS = 4;
  private boolean[] viewPrefs = new boolean[5];

  private JFileChooser saveDlg;
  private File saveFile;

  private Board currBoard = new Board();
  private ImageMaker goImages = new ImageMaker();
  //private BoardView currBoard;

  /**
   * Creates new form MainWindow
   */
  public MainWindow() {
    currBoard.newGame("White", "Black", 0, 5.5f);
    initComponents();
  }

  /**
   * This method is called from within the constructor to
   * initialize the form.
   * WARNING: Do NOT modify this code. The content of this method is
   * always regenerated by the Form Editor.
   */
  private void initComponents() {//GEN-BEGIN:initComponents
    java.awt.GridBagConstraints gridBagConstraints;

    centerStuffPanel = new javax.swing.JPanel();
    centerSplitPane = new javax.swing.JSplitPane();
    jTextArea1 = new javax.swing.JTextArea();
    boardTabsPanel = new javax.swing.JPanel();
    boardTabbedPane = new javax.swing.JTabbedPane();
    boardPanel = new javax.swing.JPanel();
    adjournMessageLabel = new javax.swing.JLabel();
    northStuffPanel = new javax.swing.JPanel();
    northViewControlPanel = new javax.swing.JPanel();
    northExpandOneButton = new javax.swing.JButton();
    northReduceOneButton = new javax.swing.JButton();
    showAllButton = new javax.swing.JButton();
    northReduceAllButton = new javax.swing.JButton();
    northExpandAllButton = new javax.swing.JButton();
    titlePanel = new javax.swing.JPanel();
    gameNameLabel = new javax.swing.JLabel();
    playerInfoSpacerPanel = new javax.swing.JPanel();
    playerInfoPanel = new javax.swing.JPanel();
    whiteInfoPanel = new javax.swing.JPanel();
    whiteTimePanel = new javax.swing.JPanel();
    whiteTimeLabel = new javax.swing.JLabel();
    whitePlayerLabel = new javax.swing.JLabel();
    whiteHasCapturedLabel = new javax.swing.JLabel();
    blackInfoPanel = new javax.swing.JPanel();
    blackHasCapturedLabel = new javax.swing.JLabel();
    blackPlayerLabel = new javax.swing.JLabel();
    blackTimePanel = new javax.swing.JPanel();
    blackTimeLabel = new javax.swing.JLabel();
    southStuffPanel = new javax.swing.JPanel();
    vcrButtonPanel = new javax.swing.JPanel();
    vcrStartButton = new javax.swing.JButton();
    vcrRewindButton = new javax.swing.JButton();
    vcrBackButton = new javax.swing.JButton();
    vcrForwardButton = new javax.swing.JButton();
    vcrFastForwardButton = new javax.swing.JButton();
    vcrEndButton = new javax.swing.JButton();
    gameButtonPanel = new javax.swing.JPanel();
    resignButton = new javax.swing.JButton();
    infoButton = new javax.swing.JButton();
    passButton = new javax.swing.JButton();
    adjournToggleButton = new javax.swing.JToggleButton();
    undoButton = new javax.swing.JButton();
    southViewControlPanel1 = new javax.swing.JPanel();
    southExpandOneButton = new javax.swing.JButton();
    southReduceOneButton = new javax.swing.JButton();
    preferedViewButton = new javax.swing.JButton();
    southReduceAllButton = new javax.swing.JButton();
    southExpandAllButton = new javax.swing.JButton();
    kibitzTextField = new javax.swing.JTextField();
    MenuBar = new javax.swing.JMenuBar();
    fileMenu = new javax.swing.JMenu();
    fileSaveMenuItem = new javax.swing.JMenuItem();
    fileMenuSeparator1 = new javax.swing.JSeparator();
    fileExitMenuItem = new javax.swing.JMenuItem();

    setTitle(PROG_NAME);
    setBackground(new java.awt.Color(140, 190, 150));
    addWindowListener(new java.awt.event.WindowAdapter() {
      public void windowClosing(java.awt.event.WindowEvent evt) {
        exitForm(evt);
      }
    });

    centerStuffPanel.setLayout(new java.awt.GridBagLayout());

    centerStuffPanel.setBackground(new java.awt.Color(140, 190, 150));
    centerSplitPane.setBorder(null);
    centerSplitPane.setDividerSize(4);
    centerSplitPane.setOrientation(javax.swing.JSplitPane.VERTICAL_SPLIT);
    centerSplitPane.setResizeWeight(1.0);
    centerSplitPane.setDoubleBuffered(true);
    jTextArea1.setColumns(20);
    jTextArea1.setEditable(false);
    jTextArea1.setRows(2);
    jTextArea1.setMinimumSize(new java.awt.Dimension(100, 16));
    centerSplitPane.setBottomComponent(jTextArea1);

    boardTabsPanel.setLayout(new java.awt.GridBagLayout());

    boardTabsPanel.setBackground(new java.awt.Color(140, 190, 150));
    boardTabsPanel.setMinimumSize(new java.awt.Dimension(100, 100));
    boardTabsPanel.setPreferredSize(new java.awt.Dimension(100, 100));
    boardTabbedPane.setBackground(new java.awt.Color(140, 190, 150));
    boardTabbedPane.setDoubleBuffered(true);
    boardPanel.setLayout(new java.awt.GridBagLayout());

    boardPanel.setBackground(new java.awt.Color(140, 190, 150));
    boardPanel.setMinimumSize(new java.awt.Dimension(50, 50));
    boardPanel.setPreferredSize(new java.awt.Dimension(200, 200));
    java.awt.GridBagConstraints gbc = new java.awt.GridBagConstraints();
    gbc.fill = java.awt.GridBagConstraints.BOTH;
    gbc.weightx = 1.0;
    gbc.weighty = 1.0;
    //gridBagConstraints6.insets = new java.awt.Insets (5, 5, 5, 5);
    boardPanel.add(new BoardView(currBoard), gbc);

    boardPanel.addMouseListener(new java.awt.event.MouseAdapter() {
      public void mouseReleased(java.awt.event.MouseEvent evt) {
        boardPanelMouseReleased(evt);
      }
    });

    boardTabbedPane.addTab("tab2", boardPanel);

    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.weighty = 1.0;
    boardTabsPanel.add(boardTabbedPane, gridBagConstraints);

    centerSplitPane.setTopComponent(boardTabsPanel);

    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 0;
    gridBagConstraints.gridy = 0;
    gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.weighty = 1.0;
    gridBagConstraints.insets = new java.awt.Insets(0, 10, 0, 10);
    centerStuffPanel.add(centerSplitPane, gridBagConstraints);

    adjournMessageLabel.setText("Game Adjourned");
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 0;
    gridBagConstraints.gridy = 0;
    centerStuffPanel.add(adjournMessageLabel, gridBagConstraints);

    getContentPane().add(centerStuffPanel, java.awt.BorderLayout.CENTER);

    northStuffPanel.setLayout(new java.awt.GridBagLayout());

    northStuffPanel.setBackground(new java.awt.Color(140, 190, 150));
    northViewControlPanel.setLayout(new java.awt.GridBagLayout());

    northExpandOneButton.setBackground(new java.awt.Color(87, 146, 181));
    northExpandOneButton.setText("-v-");
    northExpandOneButton.setBorder(new javax.swing.border.BevelBorder(javax.swing.border.BevelBorder.RAISED));
    northExpandOneButton.setPreferredSize(new java.awt.Dimension(50, 10));
    northExpandOneButton.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        northExpandOneButtonActionPerformed(evt);
      }
    });

    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.fill = java.awt.GridBagConstraints.VERTICAL;
    northViewControlPanel.add(northExpandOneButton, gridBagConstraints);

    northReduceOneButton.setBackground(new java.awt.Color(87, 146, 181));
    northReduceOneButton.setText("-^-");
    northReduceOneButton.setBorder(new javax.swing.border.BevelBorder(javax.swing.border.BevelBorder.RAISED));
    northReduceOneButton.setPreferredSize(new java.awt.Dimension(50, 10));
    northReduceOneButton.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        northReduceOneButtonActionPerformed(evt);
      }
    });

    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.fill = java.awt.GridBagConstraints.VERTICAL;
    gridBagConstraints.weighty = 1.0;
    northViewControlPanel.add(northReduceOneButton, gridBagConstraints);

    showAllButton.setBackground(new java.awt.Color(87, 146, 181));
    showAllButton.setText("Show All");
    showAllButton.setBorder(new javax.swing.border.BevelBorder(javax.swing.border.BevelBorder.RAISED));
    showAllButton.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        showAllButtonActionPerformed(evt);
      }
    });

    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
    gridBagConstraints.weightx = 1.0;
    northViewControlPanel.add(showAllButton, gridBagConstraints);

    northReduceAllButton.setBackground(new java.awt.Color(87, 146, 181));
    northReduceAllButton.setText("^^^");
    northReduceAllButton.setBorder(new javax.swing.border.BevelBorder(javax.swing.border.BevelBorder.RAISED));
    northReduceAllButton.setPreferredSize(new java.awt.Dimension(50, 20));
    northReduceAllButton.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        northReduceAllButtonActionPerformed(evt);
      }
    });

    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.fill = java.awt.GridBagConstraints.VERTICAL;
    northViewControlPanel.add(northReduceAllButton, gridBagConstraints);

    northExpandAllButton.setBackground(new java.awt.Color(87, 146, 181));
    northExpandAllButton.setText("vvv");
    northExpandAllButton.setBorder(new javax.swing.border.BevelBorder(javax.swing.border.BevelBorder.RAISED));
    northExpandAllButton.setPreferredSize(new java.awt.Dimension(50, 20));
    northExpandAllButton.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        northExpandAllButtonActionPerformed(evt);
      }
    });

    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.fill = java.awt.GridBagConstraints.VERTICAL;
    northViewControlPanel.add(northExpandAllButton, gridBagConstraints);

    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
    gridBagConstraints.weightx = 1.0;
    northStuffPanel.add(northViewControlPanel, gridBagConstraints);

    titlePanel.setBackground(new java.awt.Color(140, 190, 150));
    gameNameLabel.setFont(new java.awt.Font("Dialog", 1, 18));
    gameNameLabel.setText("Game Name");
    titlePanel.add(gameNameLabel);

    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridy = 1;
    gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
    northStuffPanel.add(titlePanel, gridBagConstraints);

    playerInfoSpacerPanel.setLayout(new java.awt.GridBagLayout());

    playerInfoSpacerPanel.setBackground(new java.awt.Color(140, 190, 150));
    playerInfoPanel.setLayout(new java.awt.GridLayout(1, 0));

    playerInfoPanel.setBackground(new java.awt.Color(205, 120, 100));
    whiteInfoPanel.setLayout(new java.awt.GridBagLayout());

    whiteInfoPanel.setBackground(java.awt.Color.white);
    whiteTimePanel.setBackground(java.awt.Color.black);
    whiteTimePanel.setForeground(java.awt.Color.green);
    whiteTimeLabel.setBackground(java.awt.Color.black);
    whiteTimeLabel.setForeground(java.awt.Color.green);
    whiteTimeLabel.setText("00:00:00");
    whiteTimePanel.add(whiteTimeLabel);

    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
    gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
    whiteInfoPanel.add(whiteTimePanel, gridBagConstraints);

    whitePlayerLabel.setText("White Player");
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
    whiteInfoPanel.add(whitePlayerLabel, gridBagConstraints);

    whiteHasCapturedLabel.setText("0");
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.insets = new java.awt.Insets(0, 5, 0, 10);
    whiteInfoPanel.add(whiteHasCapturedLabel, gridBagConstraints);

    playerInfoPanel.add(whiteInfoPanel);

    blackInfoPanel.setLayout(new java.awt.GridBagLayout());

    blackInfoPanel.setBackground(java.awt.Color.darkGray);
    blackHasCapturedLabel.setForeground(java.awt.Color.white);
    blackHasCapturedLabel.setText("0");
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.insets = new java.awt.Insets(0, 10, 0, 5);
    blackInfoPanel.add(blackHasCapturedLabel, gridBagConstraints);

    blackPlayerLabel.setForeground(java.awt.Color.white);
    blackPlayerLabel.setText("Black Player");
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
    blackInfoPanel.add(blackPlayerLabel, gridBagConstraints);

    blackTimePanel.setBackground(java.awt.Color.black);
    blackTimePanel.setForeground(java.awt.Color.green);
    blackTimeLabel.setBackground(java.awt.Color.black);
    blackTimeLabel.setForeground(java.awt.Color.green);
    blackTimeLabel.setText("00:00:00");
    blackTimePanel.add(blackTimeLabel);

    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
    blackInfoPanel.add(blackTimePanel, gridBagConstraints);

    playerInfoPanel.add(blackInfoPanel);

    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridy = 2;
    gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.insets = new java.awt.Insets(0, 50, 0, 50);
    playerInfoSpacerPanel.add(playerInfoPanel, gridBagConstraints);

    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridy = 2;
    gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
    northStuffPanel.add(playerInfoSpacerPanel, gridBagConstraints);

    getContentPane().add(northStuffPanel, java.awt.BorderLayout.NORTH);

    southStuffPanel.setLayout(new java.awt.GridBagLayout());

    southStuffPanel.setBackground(new java.awt.Color(140, 190, 150));
    vcrButtonPanel.setLayout(new java.awt.GridBagLayout());

    vcrButtonPanel.setBackground(new java.awt.Color(140, 190, 150));
    vcrStartButton.setBackground(new java.awt.Color(102, 153, 204));
    URL resource = Thread.currentThread().getContextClassLoader().getResource("images/to-start.GIF");
    vcrStartButton.setIcon(new javax.swing.ImageIcon(resource));
    vcrStartButton.setToolTipText("Go to the start");
    vcrStartButton.setBorder(new javax.swing.border.BevelBorder(javax.swing.border.BevelBorder.RAISED));
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
    gridBagConstraints.weightx = 1.0;
    vcrButtonPanel.add(vcrStartButton, gridBagConstraints);

    vcrRewindButton.setBackground(new java.awt.Color(102, 153, 204));
    URL rewind = Thread.currentThread().getContextClassLoader().getResource("images/rewind.GIF");
    vcrRewindButton.setIcon(new javax.swing.ImageIcon(rewind));
    vcrRewindButton.setToolTipText("Go back 5 moves");
    vcrRewindButton.setBorder(new javax.swing.border.BevelBorder(javax.swing.border.BevelBorder.RAISED));
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
    gridBagConstraints.weightx = 1.0;
    vcrButtonPanel.add(vcrRewindButton, gridBagConstraints);

    vcrBackButton.setBackground(new java.awt.Color(102, 153, 204));
    URL back = Thread.currentThread().getContextClassLoader().getResource("images/step-back.GIF");
    vcrBackButton.setIcon(new javax.swing.ImageIcon(back));
    vcrBackButton.setToolTipText("Go back 1 move");
    vcrBackButton.setBorder(new javax.swing.border.BevelBorder(javax.swing.border.BevelBorder.RAISED));
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
    gridBagConstraints.weightx = 1.0;
    vcrButtonPanel.add(vcrBackButton, gridBagConstraints);

    vcrForwardButton.setBackground(new java.awt.Color(102, 153, 204));
    URL forward = Thread.currentThread().getContextClassLoader().getResource("images/step forward.GIF");
    vcrForwardButton.setIcon(new javax.swing.ImageIcon(forward));
    vcrForwardButton.setToolTipText("Go forward 1 move");
    vcrForwardButton.setBorder(new javax.swing.border.BevelBorder(javax.swing.border.BevelBorder.RAISED));
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
    gridBagConstraints.weightx = 1.0;
    vcrButtonPanel.add(vcrForwardButton, gridBagConstraints);

    vcrFastForwardButton.setBackground(new java.awt.Color(102, 153, 204));
    URL ffwd = Thread.currentThread().getContextClassLoader().getResource("images/ffwd.GIF");
    vcrFastForwardButton.setIcon(new javax.swing.ImageIcon(ffwd));
    vcrFastForwardButton.setToolTipText("Go forward 5 moves");
    vcrFastForwardButton.setBorder(new javax.swing.border.BevelBorder(javax.swing.border.BevelBorder.RAISED));
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
    gridBagConstraints.weightx = 1.0;
    vcrButtonPanel.add(vcrFastForwardButton, gridBagConstraints);

    vcrEndButton.setBackground(new java.awt.Color(102, 153, 204));
    URL end = Thread.currentThread().getContextClassLoader().getResource("images/to-end.GIF");
    vcrEndButton.setIcon(new javax.swing.ImageIcon(end));
    vcrEndButton.setToolTipText("Go to the end");
    vcrEndButton.setBorder(new javax.swing.border.BevelBorder(javax.swing.border.BevelBorder.RAISED));
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
    gridBagConstraints.weightx = 1.0;
    vcrButtonPanel.add(vcrEndButton, gridBagConstraints);

    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridy = 1;
    gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
    southStuffPanel.add(vcrButtonPanel, gridBagConstraints);

    gameButtonPanel.setLayout(new java.awt.GridBagLayout());

    gameButtonPanel.setBackground(new java.awt.Color(140, 190, 150));
    resignButton.setBackground(new java.awt.Color(87, 146, 181));
    resignButton.setText("Resign");
    resignButton.setToolTipText("Resign this game");
    resignButton.setBorder(new javax.swing.border.BevelBorder(javax.swing.border.BevelBorder.RAISED));
    resignButton.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        resignButtonActionPerformed(evt);
      }
    });

    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
    gridBagConstraints.weightx = 1.0;
    gameButtonPanel.add(resignButton, gridBagConstraints);

    infoButton.setBackground(new java.awt.Color(87, 146, 181));
    infoButton.setText("Info");
    infoButton.setToolTipText("View information about this game");
    infoButton.setBorder(new javax.swing.border.BevelBorder(javax.swing.border.BevelBorder.RAISED));
    infoButton.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        infoButtonActionPerformed(evt);
      }
    });

    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
    gridBagConstraints.weightx = 1.0;
    gameButtonPanel.add(infoButton, gridBagConstraints);

    passButton.setBackground(new java.awt.Color(87, 146, 181));
    passButton.setText("Pass");
    passButton.setToolTipText("Switch to edit mode");
    passButton.setBorder(new javax.swing.border.BevelBorder(javax.swing.border.BevelBorder.RAISED));
    passButton.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        passButtonActionPerformed(evt);
      }
    });

    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
    gridBagConstraints.weightx = 1.0;
    gameButtonPanel.add(passButton, gridBagConstraints);

    adjournToggleButton.setBackground(new java.awt.Color(87, 146, 181));
    adjournToggleButton.setText("Adjourn");
    adjournToggleButton.setToolTipText("Adjourn this game");
    adjournToggleButton.setBorder(new javax.swing.border.BevelBorder(javax.swing.border.BevelBorder.RAISED));
    adjournToggleButton.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        adjournToggleButtonActionPerformed(evt);
      }
    });

    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
    gridBagConstraints.weightx = 1.0;
    gameButtonPanel.add(adjournToggleButton, gridBagConstraints);

    undoButton.setBackground(new java.awt.Color(87, 146, 181));
    undoButton.setText("Undo");
    undoButton.setToolTipText("Undo the last move");
    undoButton.setBorder(new javax.swing.border.BevelBorder(javax.swing.border.BevelBorder.RAISED));
    undoButton.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        undoButtonActionPerformed(evt);
      }
    });

    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
    gridBagConstraints.weightx = 1.0;
    gameButtonPanel.add(undoButton, gridBagConstraints);

    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridy = 2;
    gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
    southStuffPanel.add(gameButtonPanel, gridBagConstraints);

    southViewControlPanel1.setLayout(new java.awt.GridBagLayout());

    southViewControlPanel1.setBackground(new java.awt.Color(140, 190, 150));
    southExpandOneButton.setBackground(new java.awt.Color(87, 146, 181));
    southExpandOneButton.setText("-^-");
    southExpandOneButton.setBorder(new javax.swing.border.BevelBorder(javax.swing.border.BevelBorder.RAISED));
    southExpandOneButton.setPreferredSize(new java.awt.Dimension(50, 10));
    southExpandOneButton.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        southExpandOneButtonActionPerformed(evt);
      }
    });

    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.fill = java.awt.GridBagConstraints.VERTICAL;
    gridBagConstraints.weighty = 1.0;
    southViewControlPanel1.add(southExpandOneButton, gridBagConstraints);

    southReduceOneButton.setBackground(new java.awt.Color(87, 146, 181));
    southReduceOneButton.setText("-v-");
    southReduceOneButton.setBorder(new javax.swing.border.BevelBorder(javax.swing.border.BevelBorder.RAISED));
    southReduceOneButton.setPreferredSize(new java.awt.Dimension(50, 10));
    southReduceOneButton.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        southReduceOneButtonActionPerformed(evt);
      }
    });

    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.fill = java.awt.GridBagConstraints.VERTICAL;
    southViewControlPanel1.add(southReduceOneButton, gridBagConstraints);

    preferedViewButton.setBackground(new java.awt.Color(87, 146, 181));
    preferedViewButton.setText("Prefered View");
    preferedViewButton.setBorder(new javax.swing.border.BevelBorder(javax.swing.border.BevelBorder.RAISED));
    preferedViewButton.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        preferedViewButtonActionPerformed(evt);
      }
    });
    preferedViewButton.addMouseListener(new java.awt.event.MouseAdapter() {
      public void mousePressed(java.awt.event.MouseEvent evt) {
        preferedViewButtonMousePressed(evt);
      }
    });

    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
    gridBagConstraints.weightx = 1.0;
    southViewControlPanel1.add(preferedViewButton, gridBagConstraints);

    southReduceAllButton.setBackground(new java.awt.Color(87, 146, 181));
    southReduceAllButton.setText("vvv");
    southReduceAllButton.setBorder(new javax.swing.border.BevelBorder(javax.swing.border.BevelBorder.RAISED));
    southReduceAllButton.setPreferredSize(new java.awt.Dimension(50, 20));
    southReduceAllButton.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        southReduceAllButtonActionPerformed(evt);
      }
    });

    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.fill = java.awt.GridBagConstraints.VERTICAL;
    southViewControlPanel1.add(southReduceAllButton, gridBagConstraints);

    southExpandAllButton.setBackground(new java.awt.Color(87, 146, 181));
    southExpandAllButton.setText("^^^");
    southExpandAllButton.setBorder(new javax.swing.border.BevelBorder(javax.swing.border.BevelBorder.RAISED));
    southExpandAllButton.setPreferredSize(new java.awt.Dimension(50, 20));
    southExpandAllButton.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        southExpandAllButtonActionPerformed(evt);
      }
    });

    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.fill = java.awt.GridBagConstraints.VERTICAL;
    southViewControlPanel1.add(southExpandAllButton, gridBagConstraints);

    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridy = 3;
    gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
    gridBagConstraints.weightx = 1.0;
    southStuffPanel.add(southViewControlPanel1, gridBagConstraints);

    kibitzTextField.setText("jTextField1");
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 0;
    gridBagConstraints.gridy = 0;
    gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.insets = new java.awt.Insets(0, 10, 0, 10);
    southStuffPanel.add(kibitzTextField, gridBagConstraints);

    getContentPane().add(southStuffPanel, java.awt.BorderLayout.SOUTH);

    MenuBar.setBackground(new java.awt.Color(87, 146, 181));
    fileMenu.setBackground(new java.awt.Color(87, 146, 181));
    fileMenu.setText("File");
    fileMenu.setIconTextGap(0);
    fileMenu.setMargin(new java.awt.Insets(0, 0, 0, 0));
    fileSaveMenuItem.setBackground(new java.awt.Color(87, 146, 181));
    fileSaveMenuItem.setText("Save");
    fileSaveMenuItem.setBorder(null);
    fileSaveMenuItem.setIconTextGap(0);
    fileSaveMenuItem.setMargin(new java.awt.Insets(0, 0, 0, 0));
    fileSaveMenuItem.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        fileSaveMenuItemActionPerformed(evt);
      }
    });

    fileMenu.add(fileSaveMenuItem);

    fileMenuSeparator1.setBackground(new java.awt.Color(87, 146, 181));
    fileMenuSeparator1.setForeground(new java.awt.Color(0, 0, 0));
    fileMenu.add(fileMenuSeparator1);

    fileExitMenuItem.setBackground(new java.awt.Color(87, 146, 181));
    fileExitMenuItem.setText("Exit");
    fileExitMenuItem.setBorder(null);
    fileExitMenuItem.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        fileExitMenuItemActionPerformed(evt);
      }
    });

    fileMenu.add(fileExitMenuItem);

    MenuBar.add(fileMenu);

    setJMenuBar(MenuBar);

    java.awt.Dimension screenSize = java.awt.Toolkit.getDefaultToolkit().getScreenSize();
    setBounds((screenSize.width - 424) / 2, (screenSize.height - 550) / 2, 424, 550);
  }//GEN-END:initComponents

  private void fileExitMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fileExitMenuItemActionPerformed
    // Add your handling code here:
    exitForm(new WindowEvent(this, WindowEvent.WINDOW_CLOSING));
  }//GEN-LAST:event_fileExitMenuItemActionPerformed

  private void infoButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_infoButtonActionPerformed
    // Add your handling code here:
  }//GEN-LAST:event_infoButtonActionPerformed

  private void passButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_passButtonActionPerformed
    // Add your handling code here:
    currBoard.doMove(Move.PASS, Move.PASS);
  }//GEN-LAST:event_passButtonActionPerformed

  private void adjournToggleButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_adjournToggleButtonActionPerformed
    // Add your handling code here:
    centerSplitPane.setVisible(!adjournToggleButton.isSelected());
    adjournMessageLabel.setVisible(adjournToggleButton.isSelected());
    if (adjournToggleButton.isSelected()) {
      adjournToggleButton.setText("Resume");
    } else {
      adjournToggleButton.setText("Adjourn");
    }


  }//GEN-LAST:event_adjournToggleButtonActionPerformed

  private void fileSaveMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fileSaveMenuItemActionPerformed
    // Add your handling code here:

    // lazy initialize the dialog
    if (saveDlg == null) {
      saveDlg = new JFileChooser();
      saveDlg.setDialogTitle("Save Game to Disk");
      saveDlg.setFileFilter(new SGFFileFilter());
    }
    saveDlg.showSaveDialog(this);
    saveFile = saveDlg.getSelectedFile();
    if (saveFile != null) {
      currBoard.saveGame(saveFile.getPath());
    }

  }//GEN-LAST:event_fileSaveMenuItemActionPerformed

  private void undoButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_undoButtonActionPerformed
    // Add your handling code here:
    currBoard.undoMove();
    boardPanel.repaint();
  }//GEN-LAST:event_undoButtonActionPerformed

  private void preferedViewButtonMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_preferedViewButtonMousePressed
    // Add your handling code here:
    if ((evt.getModifiers() & InputEvent.CTRL_MASK) != 0) {
      //System.out.println("gotit");
      viewPrefs[GAME_NAME] = titlePanel.isVisible();
      viewPrefs[PLYR_INFO] = playerInfoSpacerPanel.isVisible();
      viewPrefs[KBTZ_PANL] = kibitzTextField.isVisible();
      viewPrefs[VCR__BTNS] = vcrButtonPanel.isVisible();
      viewPrefs[CTRL_BTNS] = gameButtonPanel.isVisible();
    }

  }//GEN-LAST:event_preferedViewButtonMousePressed

  private void preferedViewButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_preferedViewButtonActionPerformed
    // Add your handling code here:
    titlePanel.setVisible(viewPrefs[GAME_NAME]);
    playerInfoSpacerPanel.setVisible(viewPrefs[PLYR_INFO]);
    kibitzTextField.setVisible(viewPrefs[KBTZ_PANL]);
    vcrButtonPanel.setVisible(viewPrefs[VCR__BTNS]);
    gameButtonPanel.setVisible(viewPrefs[CTRL_BTNS]);
    this.validate();

  }//GEN-LAST:event_preferedViewButtonActionPerformed

  private void showAllButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_showAllButtonActionPerformed
    // Add your handling code here:
    northExpandAllButtonActionPerformed(evt);
    southExpandAllButtonActionPerformed(evt);
  }//GEN-LAST:event_showAllButtonActionPerformed

  private void southExpandOneButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_southExpandOneButtonActionPerformed
    // Add your handling code here:
    if (!kibitzTextField.isVisible()) {
      kibitzTextField.setVisible(true);
      this.validate();
      return;
    }
    if (!gameButtonPanel.isVisible()) {
      gameButtonPanel.setVisible(true);
      this.validate();
      return;
    }
    if (!vcrButtonPanel.isVisible()) {
      vcrButtonPanel.setVisible(true);
      this.validate();
      return;
    }

  }//GEN-LAST:event_southExpandOneButtonActionPerformed

  private void southReduceOneButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_southReduceOneButtonActionPerformed
    // Add your handling code here:
    if (vcrButtonPanel.isVisible()) {
      vcrButtonPanel.setVisible(false);
      this.validate();
      return;
    }
    if (gameButtonPanel.isVisible()) {
      gameButtonPanel.setVisible(false);
      this.validate();
      return;
    }
    if (kibitzTextField.isVisible()) {
      kibitzTextField.setVisible(false);
      this.validate();
      return;
    }

  }//GEN-LAST:event_southReduceOneButtonActionPerformed

  private void northExpandOneButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_northExpandOneButtonActionPerformed
    // Add your handling code here:
    if (!playerInfoSpacerPanel.isVisible()) {
      playerInfoSpacerPanel.setVisible(true);
      this.validate();
      return;
    }
    if (!titlePanel.isVisible()) {
      titlePanel.setVisible(true);
      this.validate();
      return;
    }
  }//GEN-LAST:event_northExpandOneButtonActionPerformed

  private void northReduceOneButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_northReduceOneButtonActionPerformed
    // Add your handling code here:
    if (titlePanel.isVisible()) {
      titlePanel.setVisible(false);
      this.validate();
      return;
    }
    if (playerInfoSpacerPanel.isVisible()) {
      playerInfoSpacerPanel.setVisible(false);
      this.validate();
      return;
    }
  }//GEN-LAST:event_northReduceOneButtonActionPerformed

  private void southExpandAllButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_southExpandAllButtonActionPerformed
    // Add your handling code here:
    gameButtonPanel.setVisible(true);
    vcrButtonPanel.setVisible(true);
    kibitzTextField.setVisible(true);
  }//GEN-LAST:event_southExpandAllButtonActionPerformed

  private void southReduceAllButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_southReduceAllButtonActionPerformed
    // Add your handling code here:
    gameButtonPanel.setVisible(false);
    vcrButtonPanel.setVisible(false);
    kibitzTextField.setVisible(false);
  }//GEN-LAST:event_southReduceAllButtonActionPerformed

  private void northReduceAllButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_northReduceAllButtonActionPerformed
    // Add your handling code here:
    titlePanel.setVisible(false);
    playerInfoSpacerPanel.setVisible(false);
    validate();
  }//GEN-LAST:event_northReduceAllButtonActionPerformed

  private void northExpandAllButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_northExpandAllButtonActionPerformed
    // Add your handling code here:
    titlePanel.setVisible(true);
    playerInfoSpacerPanel.setVisible(true);
    validate();
  }//GEN-LAST:event_northExpandAllButtonActionPerformed

  private void boardPanelMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_boardPanelMouseReleased
    // Add your handling code here:
    int x = evt.getX();
    int y = evt.getY();
    JPanel src = ((JPanel) evt.getSource());
    int panelHeight = src.getHeight();
    int panelWidth = src.getWidth();

    // note that this and other code in BoardView ignore Borders!!
    int boardImageSize = Math.min(panelHeight, panelWidth);

    int extraH = (panelHeight - boardImageSize) / 2;
    int extraW = (panelWidth - boardImageSize) / 2;

    x -= extraW;
    y -= extraH;

    int numlines = currBoard.getBoardSize();
    float lineSpace = (src.getHeight()) / ((float) numlines + 1);

    x = Math.round(((x) / lineSpace) - 1);
    y = Math.round(((y) / lineSpace) - 1);  // screen 0,0 == Upper Left
    y = numlines - y;                     // convert to board 0,0 == Lower Left
    y--;
    if (x >= 0 && x < numlines && y >= 0 && y < numlines) {
      if (evt.isControlDown()) {
        System.out.println("libs="
            + currBoard.countLiberties(new PointOfPlay(x, y)));
        System.out.println("the group has "
            + currBoard.countGroup(new PointOfPlay(x, y))
            + "stones.");
      } else {
        if (evt.isShiftDown()) {
          currBoard.captureGroup(new PointOfPlay(x, y));
          src.repaint();
        } else {

          //goImages.paintStone(x,y,who,src.getHeight(),numlines,g);

          currBoard.doMove(x, y);
          src.repaint(5);
        }

      }
    }
    whiteHasCapturedLabel.setText("" + currBoard.getWhiteHasCap());
    blackHasCapturedLabel.setText("" + currBoard.getBlackHasCap());
  }//GEN-LAST:event_boardPanelMouseReleased

  private void resignButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_resignButtonActionPerformed
    // Add your handling code here:
    currBoard.doResign();
  }//GEN-LAST:event_resignButtonActionPerformed

  /**
   * Exit the Application
   */
  private void exitForm(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_exitForm
    System.exit(0);
  }//GEN-LAST:event_exitForm

  /**
   * @param args the command line arguments
   */
  public static void main(String args[]) {
    new MainWindow().show();

  }


  // Variables declaration - do not modify//GEN-BEGIN:variables
  private javax.swing.JMenuBar MenuBar;
  private javax.swing.JLabel adjournMessageLabel;
  private javax.swing.JToggleButton adjournToggleButton;
  private javax.swing.JLabel blackHasCapturedLabel;
  private javax.swing.JPanel blackInfoPanel;
  private javax.swing.JLabel blackPlayerLabel;
  private javax.swing.JLabel blackTimeLabel;
  private javax.swing.JPanel blackTimePanel;
  private javax.swing.JPanel boardPanel;
  private javax.swing.JTabbedPane boardTabbedPane;
  private javax.swing.JPanel boardTabsPanel;
  private javax.swing.JSplitPane centerSplitPane;
  private javax.swing.JPanel centerStuffPanel;
  private javax.swing.JMenuItem fileExitMenuItem;
  private javax.swing.JMenu fileMenu;
  private javax.swing.JSeparator fileMenuSeparator1;
  private javax.swing.JMenuItem fileSaveMenuItem;
  private javax.swing.JPanel gameButtonPanel;
  private javax.swing.JLabel gameNameLabel;
  private javax.swing.JButton infoButton;
  private javax.swing.JTextArea jTextArea1;
  private javax.swing.JTextField kibitzTextField;
  private javax.swing.JButton northExpandAllButton;
  private javax.swing.JButton northExpandOneButton;
  private javax.swing.JButton northReduceAllButton;
  private javax.swing.JButton northReduceOneButton;
  private javax.swing.JPanel northStuffPanel;
  private javax.swing.JPanel northViewControlPanel;
  private javax.swing.JButton passButton;
  private javax.swing.JPanel playerInfoPanel;
  private javax.swing.JPanel playerInfoSpacerPanel;
  private javax.swing.JButton preferedViewButton;
  private javax.swing.JButton resignButton;
  private javax.swing.JButton showAllButton;
  private javax.swing.JButton southExpandAllButton;
  private javax.swing.JButton southExpandOneButton;
  private javax.swing.JButton southReduceAllButton;
  private javax.swing.JButton southReduceOneButton;
  private javax.swing.JPanel southStuffPanel;
  private javax.swing.JPanel southViewControlPanel1;
  private javax.swing.JPanel titlePanel;
  private javax.swing.JButton undoButton;
  private javax.swing.JButton vcrBackButton;
  private javax.swing.JPanel vcrButtonPanel;
  private javax.swing.JButton vcrEndButton;
  private javax.swing.JButton vcrFastForwardButton;
  private javax.swing.JButton vcrForwardButton;
  private javax.swing.JButton vcrRewindButton;
  private javax.swing.JButton vcrStartButton;
  private javax.swing.JLabel whiteHasCapturedLabel;
  private javax.swing.JPanel whiteInfoPanel;
  private javax.swing.JLabel whitePlayerLabel;
  private javax.swing.JLabel whiteTimeLabel;
  private javax.swing.JPanel whiteTimePanel;
  // End of variables declaration//GEN-END:variables

}

/*
 * $Log$
 * Revision 1.13  2003/07/19 03:44:00  gus
 * comment out debugging print
 *
 * Revision 1.12  2003/07/19 03:20:01  gus
 * fix class javadoc
 *
 * Revision 1.11  2003/07/19 03:17:02  gus
 * use a constant for the frame title
 *
 * Revision 1.10  2003/07/19 02:50:54  gus
 * correct license date
 *
 * Revision 1.9  2003/07/19 02:50:05  gus
 * New License based on the Apache License, Yeah open source :)
 *
 * Revision 1.8  2003/07/18 03:56:11  gus
 * recolor the interface. Green is friendlier even if rust is more kestrel like.
 *
 * Revision 1.7  2002/12/26 05:10:54  gus
 * remove inadvertantly added vcrStartButton listener
 *
 * Revision 1.5  2002/12/26 04:28:01  gus
 * Implemented Adjourn button
 *
 * Revision 1.4  2002/12/25 04:47:32  gus
 * Added: Fille - Save; Undo button functionality;Pass Butto
 * Removed: Edit Button
 *
 * Revision 1.3  2002/12/24 21:16:53  gus
 * layout tweak
 *
 * Revision 1.2  2002/12/24 21:04:37  gus
 * Board View now displays properly and show/hide buttons
 * work properly.
 *
 * Revision 1.1  2002/12/16 06:16:58  gus
 * adding in a new interface based on swing components.
 * Hopefully this will surplant the previous interface.
 *
 */